<?php

// While Loop
// Use a while loop in these tasks.

// Task 1: The basic case of looping through numbers

// Make a program that prints all positive numbers that are odd and smaller than 100 starting from 1. (1 3 5 7 9 11...)

// Task 2: A bit more challenge

// Make a program that prints all positive numbers that are smaller than 100 and even, in this order: 2 98 4 96 6 94... Print result in one line.

// Hints: The counter you want to increase by two each round is added to 0 and subtracted from 100, so e.g. $counter . " " . (100 – $counter). In order to print everything in same line, build a string in the loop and print it after the loop.

// Task 3: A real-world example

// If we just want to loop through numbers, a for loop is a natural choice instead of a while loop. A much more common real-world example in PHP would be looping through input from a file or a database. Download the PHP file and data file below to your PHP folder and see if you can complete the program. (Don’t worry, it’s just one line you need to write.)

// for ($i = 1; $i < 100; $i++)  {
//     print $i . " ";
// }

$result = '';
$counter = 1;

while ($counter < 100) {
    $result .= $counter . ' ';
    $counter += 2;
}

echo $result;

$result = '';
$counter = 2;

while ($counter < 100) {
    $result .= $counter . ' ' . (100 - $counter) . ' ';
    $counter += 2;
}

echo $result;

// For Loop
// Use a for loop in these tasks.

// Task 1: Let’s start with the basic case again

// Make a program that prints all positive numbers that are even and smaller than 100 starting from 2. (2 4 6 8 10...)



for ($i = 2; $i < 100; $i =+ 2) {
    $i . " ";
}

echo $i;

// Task 2: Sum of the series

// Make a program that calculates and prints the sum of the series from $number1 to $number2. Give values of your choosing to these variables (in real-life case they’d most likely come from a form in web page). E.g. if the values are 1 and 5, the program should calculate 1+2+3+4+5 and print the value 15.

// Extra challenge: Print the calculation too. You may need a conditional statement (if) to avoid printing an extra plus sign to the end.

$number1 = 2;
$number2 = 10;
$sumOfSeries = 0;

for ($results = $number1; $results <= $number2; $results++) {
    $sumOfSeries += $results;
    print $results . " ";
}

echo $sumOfSeries;

// Task 3: Loop inside a loop (optional)

// You can also put a loop inside another loop. This is called a nested loop. Make a program to print the following pattern, using nested for loop.

// *  
// * *  
// * * *  
// * * * *  
// * * * * *

// Hint: The upper limit of the inner loop is the current value of the outer loop. So while the “row” is 1, the inner loop prints one star, etc.
  
for($i=0;$i<=5;$i++){  
    for($j=1;$j<=$i;$j++){  
    echo "* ";  
    }  
    echo "\n";  
    }  

    // Foreach Loop
    // Use a foreach loop in these tasks.
    
    // Task 1: Looping through an indexed array
    
    // Copy the following array (generated by ChatGPT) to your PHP code:
    
    // $shopping_list = array("Apples", "Milk", "Bread", "Eggs", "Chicken");
    
    // Then write the code to print the shopping list in the following format:
    // - Apples
    // - Milk
    // - Bread
    // - Eggs
    // - Chicken

    $groceries = array("Apples", "Milk", "Bread", "Eggs", "Chicken");

    foreach ($groceries as $shopping_list) {
        echo "-$shopping_list  \n";
    }
    
    // Task 2: Looping through an associative array
    
    // Copy the following array (also generated by ChatGPT) to your PHP code:
    
    $countries_and_capitals = array(
        "United States" => "Washington, D.C.",
        "United Kingdom" => "London",
        "France" => "Paris",
        "Germany" => "Berlin",
        "Italy" => "Rome",
        "Canada" => "Ottawa",
        "Japan" => "Tokyo",
        "Australia" => "Canberra",
        "Brazil" => "Brasília",
        "India" => "New Delhi"
    );
    
    foreach($countries_and_capitals as $country => $capital) {
        echo "The capital of $country is $capital\n";
    }
    
    // Then write the code to loop through the key-value pairs and print each country and its capital in a separate line in the following form: The capital of (country) is (capital). E.g. The capital of France is Paris.
    
    // Task 3: Good fruits, bad fruits
    
    // Let’s practice using the break command to interrupt the loop. Copy the following array (also generated by ChatGPT) to your PHP code:
    
    $fruits = array("Apple", "Banana", "Poisonous Berry", "Strawberry", "Grapes");
    
    foreach($fruits as $fruitList) {
        echo "Today we will eat... $fruitList.\n";
    if ($fruitList == "Poisonous Berry") {
            $poison = "Poisonous Berry";
            echo "Hold on a minute! Poisonous Berry is dangerous!\n";
            if($fruitList == $poison) {
                echo "$poison is considered dangerous. Abort.";
                break;
            }
        }
    }
    // Then write the code to print the fruits in the following manner. BUT if the program finds “Poisonous Berry” in the array slot it’s supposed to print, it prints “Hold on a minute! (fruit name) is dangerous!” instead and ends (breaks) the loop.
    
    // Today we will eat…
    // Apple…
    // Banana…
    // Hold on a minute! Poisonous Berry is dangerous!
    
    // For a bit of extra challenge, you can use the condition that if the fruit name contains the word “poisonous”, it’s considered dangerous and ends the loop.

?>